CHALLENGE
***********************
Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.

TEST CASES
*****************
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return an array.
largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27,5,39,1001].
largestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000].

SOLUTION
******************
1. Iterate through given arrays
2. Iterate through subarray and sort from largest to smallest
3. Shift each subarray and push it to new array
4. Return newArray


function largestOfFour(arr) {
  var newArray = [];
  for ( var i = 0; i < arr.length; i ++ ) {
    for (var j = 0; j < arr[i].length; j++ ) {
      arr[i].sort(function (a,b) {
        return b > a;
      });
    }
    newArray.push(arr[i].shift());
  }
  return newArray;
}
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);
